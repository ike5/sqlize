const ButtonInteraction = {
  type: 3,
  id: '1015136516357496873',
  applicationId: '1009318061104439367',
  channelId: '998376260931686421',
  guildId: '992128683735269467',
  user: {
    id: '994666257548849222',
    bot: false,
    system: false,
    flags: { bitfield: 0 },
    username: 'ike3422',
    discriminator: '6866',
    avatar: null,
    banner: undefined,
    accentColor: undefined,
  },
  member: {
    guild: {
      id: '992128683735269467',
      name: 'Day Owls',
      icon: 'f0d6629c109cfe43327add09fb89f838',
      features: [Array],
      commands: [GuildApplicationCommandManager],
      members: [GuildMemberManager],
      channels: [GuildChannelManager],
      bans: [GuildBanManager],
      roles: [RoleManager],
      presences: {},
      voiceStates: [VoiceStateManager],
      stageInstances: [StageInstanceManager],
      invites: [GuildInviteManager],
      scheduledEvents: [GuildScheduledEventManager],
      available: true,
      shardId: 0,
      splash: null,
      banner: null,
      description:
        'Study together and keep each other accountable in the Day Owls study group.',
      verificationLevel: 1,
      vanityURLCode: null,
      nsfwLevel: 0,
      premiumSubscriptionCount: 0,
      discoverySplash: null,
      memberCount: 99,
      large: true,
      premiumProgressBarEnabled: false,
      applicationId: null,
      afkTimeout: 300,
      afkChannelId: null,
      systemChannelId: '992128684267950161',
      premiumTier: 0,
      widgetEnabled: null,
      widgetChannelId: null,
      explicitContentFilter: 2,
      mfaLevel: 1,
      joinedTimestamp: 1661927704283,
      defaultMessageNotifications: 1,
      systemChannelFlags: [SystemChannelFlagsBitField],
      maximumMembers: 500000,
      maximumPresences: null,
      maxVideoChannelUsers: 25,
      approximateMemberCount: null,
      approximatePresenceCount: null,
      vanityURLUses: null,
      rulesChannelId: '992146700015779900',
      publicUpdatesChannelId: '992146700015779901',
      preferredLocale: 'en-US',
      ownerId: '911428212565885008',
      emojis: [GuildEmojiManager],
      stickers: [GuildStickerManager],
    },
    joinedTimestamp: 1658102086291,
    premiumSinceTimestamp: null,
    nickname: null,
    pending: false,
    communicationDisabledUntilTimestamp: null,
    _roles: ['1001877682004447284'],
    user: {
      id: '994666257548849222',
      bot: false,
      system: false,
      flags: [UserFlagsBitField],
      username: 'ike3422',
      discriminator: '6866',
      avatar: null,
      banner: undefined,
      accentColor: undefined,
    },
    avatar: null,
  },
  version: 1,
  appPermissions: { bitfield: 1097468472897n },
  memberPermissions: { bitfield: 1071698529857n },
  locale: 'en-US',
  guildLocale: 'en-US',
  message: {
    channelId: '998376260931686421',
    guildId: '992128683735269467',
    id: '1015134489451692032',
    createdTimestamp: 1662097322572,
    type: 20,
    system: false,
    content: 'Click below to check-out',
    author: {
      id: '1009318061104439367',
      bot: true,
      system: false,
      flags: [UserFlagsBitField],
      username: 'Sequelize',
      discriminator: '0781',
      avatar: 'cabab7cba48f61524bdd3f5db3f1768c',
      banner: undefined,
      accentColor: undefined,
      verified: true,
      mfaEnabled: true,
    },
    pinned: false,
    tts: false,
    nonce: null,
    embeds: [],
    components: [[ActionRow]],
    attachments: {},
    stickers: {},
    editedTimestamp: null,
    reactions: { message: [Circular * 1] },
    mentions: {
      everyone: false,
      users: {},
      roles: {},
      _members: null,
      _channels: null,
      _parsedUsers: null,
      crosspostedChannels: {},
      repliedUser: null,
    },
    webhookId: '1009318061104439367',
    groupActivityApplication: null,
    applicationId: '1009318061104439367',
    activity: null,
    flags: { bitfield: 64 },
    reference: null,
    interaction: {
      id: '1015134484137525308',
      type: 2,
      commandName: 'check',
      user: [User],
    },
  },
  customId: 'checkout',
  componentType: 2,
  deferred: false,
  ephemeral: false,
  replied: true,
  webhook: { id: '1009318061104439367' },
};

client.on('interactionCreate', async (interaction) => {
  if (interaction.type !== InteractionType.ModalSubmit) return;
  if (interaction.customId === 'myModal') {
    await interaction.reply({
      content: 'Your submission was received successfully!',
      ephemeral: true,
    });
  }
});

const modal = new ModalBuilder().setCustomId('myModal').setTitle('My Modal');

// Create the text input components
const notOwnerText = new TextInputBuilder()
  .setCustomId('notOwner')
  .setLabel("You're not the owner of this check-in!")
  // Short means only a single line of text
  .setStyle(TextInputStyle.Short);

const firstActionRow = new ActionRowBuilder().addComponents(notOwnerText);
modal.addComponents(firstActionRow);

await interaction.showModal(modal);
